<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CUDA on Tweakzx</title>
    <link>https://tweakzx.github.io/tags/cuda/</link>
    <description>Recent content in CUDA on Tweakzx</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 13 Dec 2021 19:03:20 +0800</lastBuildDate><atom:link href="https://tweakzx.github.io/tags/cuda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【分布式与并行计算】CUDA加速课程题目</title>
      <link>https://tweakzx.github.io/p/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8E%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97cuda%E5%8A%A0%E9%80%9F%E8%AF%BE%E7%A8%8B%E9%A2%98%E7%9B%AE/</link>
      <pubDate>Mon, 13 Dec 2021 19:03:20 +0800</pubDate>
      
      <guid>https://tweakzx.github.io/p/%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%8E%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97cuda%E5%8A%A0%E9%80%9F%E8%AF%BE%E7%A8%8B%E9%A2%98%E7%9B%AE/</guid>
      <description>1 加速向量加法 #include &amp;lt;stdio.h&amp;gt;#include &amp;lt;assert.h&amp;gt; inline cudaError_t checkCuda(cudaError_t result) { if (result != cudaSuccess) { fprintf(stderr, &amp;#34;CUDA Runtime Error: %s\n&amp;#34;, cudaGetErrorString(result)); assert(result == cudaSuccess); } return result; } void initWith(float num, float *a, int N) { for(int i = 0; i &amp;lt; N; ++i) { a[i] = num; } } __global__ void addVectorsInto(float *result, float *a, float *b, int N) { int initIndex = threadIdx.x</description>
    </item>
    
  </channel>
</rss>
